#BlueJ class context
comment0.target=Start
comment0.text=\r\n\ Start\ World\ -\ The\ World\ that\ greets\ the\ user,\ includes\ fascinating\ images\ for\ the\ background\ as\ well\ as\ the\ title,\r\n\ draws\ users\ in.\ Through\ buttons,\ allows\ users\ to\ view\ an\ info\ page\ to\ get\ to\ know\ the\ game,\ change\ the\ soundtrack\r\n\ or\ disable\ it,\ disable\ or\ enable\ the\ SFX,\ and\ start\ the\ game.\r\n\ \r\n\ <h1>How\ to\ play\:</h1>\r\n\ <ol>\r\n\ \ \ \ \ \ <li>Start\ the\ scenario,\ click\ the\ "Start"\ button\ to\ go\ to\ the\ main\ menu</li>\r\n\ \ \ \ \ \ <li>Click\ on\ the\ music\ button\ (music\ logo)\ to\ change\ the\ track\ or\ turn\ it\ off</li>\r\n\ \ \ \ \ \ <li>Click\ on\ the\ SFX\ button\ (speaker\ logo)\ to\ switch\ it\ on\ or\ off</li>\r\n\ \ \ \ \ \ <li>In\ the\ main\ menu,\ click\ on\ any\ of\ the\ levels\ to\ go\ to\ them</li>\r\n\ \ \ \ \ \ <li>Click\ on\ any\ of\ the\ boxes\ with\ towers\ to\ select\ and\ click\ on\ a\ tile\ to\ place\ it\ there</li>\r\n\ \ \ \ \ \ <li>Click\ on\ the\ tower\ to\ show\ the\ range,\ click\ again\ to\ hide\ it</li>\r\n\ \ \ \ \ \ <li>Click\ on\ the\ blue\ start\ button\ on\ the\ bottom\ right\ to\ start\ the\ wave</li>\r\n\ \ \ \ \ \ <li>Put\ towers\ throughout\ the\ map\ to\ defend\ against\ the\ enemies\ that\ move\ throughout\ the\ map</li>\r\n\ \ \ \ \ \ <li>Make\ sure\ your\ lives\ do\ not\ run\ out,\ if\ you\ do,\ you\ lose</li>\r\n\ \ \ \ \ \ <li>If\ all\ the\ waves\ complete\ and\ you\ succeed,\ you\ will\ be\ awarded\ the\ score</li>\r\n\ \ \ \ \ \ <li>Click\ on\ the\ home\ button\ to\ go\ back\ to\ the\ main\ menu\ or\ restart\ the\ button</li>\r\n\ </ol>\r\n\ \r\n\ <br>\r\n\ \r\n\ <h1>Features\ to\ look\ out\ for\!</h1>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>6\ different\ levels,\ with\ different\ maps\ the\ user\ can\ choose\ to\ play</li>\r\n\ \ \ \ \ \ <li>6\ different\ towers\ the\ users\ can\ choose\ to\ place\ on\ any\ available\ tile</li>\r\n\ \ \ \ \ \ <li>5\ different\ enemies\ that\ will\ be\ spawned\ throughout\ the\ game</li>\r\n\ \ \ \ \ \ <li>7\ different\ types\ of\ projectiles\ for\ each\ tower\ and\ the\ tank</li>\r\n\ \ \ \ \ \ <li>Start\ screen\ to\ greet\ the\ user</li>\r\n\ \ \ \ \ \ <li>MainMenu\ screen\ including\ selection\ for\ each\ of\ the\ 6\ levels</li>\r\n\ \ \ \ \ \ <li>LevelComplete\ screen\ that\ displays\ when\ the\ level\ finishes,\ displays\ different\ graphics\ based\ on\ success\ or\ failure</li>\r\n\ \ \ \ \ \ <li>Scoreboard\ that\ also\ displays\ on\ the\ LevelComplete\ screen\ to\ show\ the\ players\ who\ have\ accumulated\ the\ most\ money\ from\ completing\ levels</li>\r\n\ \ \ \ \ \ <li>Settings\ button\ in\ Levels\ for\ users\ to\ resume,\ restart,\ go\ to\ home,\ look\ at\ information,\ switch\ soundtrack\ and\ SFX</li>\r\n\ \ \ \ \ \ <li>Buttons\ enlarge\ when\ users\ hover\ over\ them,\ shrink\ back\ to\ regular\ size\ when\ not</li>\r\n\ \ \ \ \ \ <li>User\ gains\ score\ (money)\ for\ completing\ levels,\ shown\ on\ a\ global\ leaderboard\ in\ the\ end\ screen</li>\r\n\ \ \ \ \ \ <li>Menu\ graphic\ where\ users\ can\ click\ and\ place\ towers</li>\r\n\ \ \ \ \ \ <li>When\ users\ click\ on\ boxes\ containing\ towers\ a\ graphic\ pops\ up\ displaying\ price\ of\ the\ tower</li>\r\n\ \ \ \ \ \ <li>Clicking\ on\ the\ tower\ displays\ its\ range</li>\r\n\ \ \ \ \ \ <li>Buttons\ on\ the\ bottom\ right\ of\ Start,\ MainMenu\ and\ LevelComplete\ screen\ to\ control\ soundtrack\ (music\ symbol)\ and\ whether\ or\ not\ SFX\ will\ play\ (speaker\ symbol)</li>\r\n\ \ \ \ \ \ <li>Button\ on\ bottom\ right\ of\ Start,\ MainMenu\ and\ LevelComplete\ to\ show\ an\ information\ graphic</li>\r\n\ \ \ \ \ \ <li>User's\ selection\ of\ music\ is\ saved\ from\ world\ to\ world\ and\ after\ the\ user\ plays</li>\r\n\ \ \ \ \ \ <li>3\ different\ animations\ for\ explosions,\ dragons\ flying,\ wolves\ running</li>\r\n\ \ \ \ \ \ <li>Various\ sound\ effects\ and\ soundtracks\ (see\ below)</li>\r\n\ \ \ \ \ \ <li>Lots\ of\ graphics\ (see\ below)</li>\r\n\ </ul>\r\n\ \r\n\ <br>\r\n\ \r\n\ <h1>Requirements\:</h1>\r\n\ <h2>2D\ Arrays</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Each\ level\ has\ a\ 2D\ array\ of\ integers\ for\ the\ coordinates\ the\ enemies\ have\ to\ move\ to</li>\r\n\ \ \ \ \ \ <li>Also\ has\ a\ 2D\ array\ of\ integers\ for\ the\ types\ of\ enemies\ that\ will\ spawn\ each\ round</li>\r\n\ \ \ \ \ \ <li>Another\ 2D\ array\ of\ integers\ for\ intervals\ (in\ milliseconds)\ between\ which\ enemies\ will\ spawn</li>\r\n\ \ \ \ \ \ <li>These\ 2D\ arrays\ are\ extremely\ important\ for\ our\ game's\ interactions\ as\ they\ are\ the\ basis\ of\ how\ enemies\ move,\ as\ well\ as\ where\ users\ can\ place\ their\ towers</li>\r\n\ \ \ \ \ \ <li>Also,\ they\ determine\ which\ enemies\ will\ spawn\ and\ at\ what\ intervals</li>\r\n\ </ul>\r\n\ <br>\r\n\ \r\n\ <h2>The\ Grid</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Maps\ for\ each\ of\ the\ levels\ were\ created\ using\ tile\ art\ that\ was\ pieced\ together\ into\ 16\ tile\ by\ 10\ tile\ formations</li>\r\n\ \ \ \ \ \ <li>Structure\ of\ the\ map\ forms\ a\ 17\ by\ 11\ grid,\ hence\ 16\ by\ 10\ tiles\r\n\ \ \ \ \ \ <li>Towers\ can\ only\ be\ placed\ on\ tiles,\ which\ is\ a\ square\ enclosed\ by\ grid\ lines</li>\r\n\ \ \ \ \ \ <li>Enemies\ move\ along\ the\ grid\ lines,\ between\ the\ tiles</li>\r\n\ </ul>\r\n\ <br>\r\n\ \r\n\ <h2>UserInfo\ Class</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Saves\ the\ cumulative\ score\ of\ the\ user,\ which\ increases\ when\ the\ user\ completes\ a\ level</li>\r\n\ \ \ \ \ \ <li>User\ is\ allowed\ to\ choose\ between\ 1\ of\ 3\ soundtracks\ or\ none,\ saved\ in\ UserInfo</li>\r\n\ \ \ \ \ \ <li>User\ can\ turn\ on\ or\ off\ SFX,\ saved\ in\ UserInfo</li>\r\n\ \ \ \ \ \ <li>Scoreboard\ is\ displayed\ in\ the\ LevelComplete\ screen\ that\ shows\ which\ user\ has\ the\ highest\ score\ based\ on\ their\ UserInfo</li>\r\n\ </ul>\r\n\ <br>\r\n\ \r\n\ <h2>ArrayList,\ Stacks,\ and\ Queues</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Queue\ is\ populated\ with\ waves\ (arrays\ of\ integers\ for\ enemy\ type)\ to\ determine\ which\ enemy\ will\ spawn\ next</li>\r\n\ \ \ \ \ \ <li>Queue\ is\ populated\ with\ intervals\ (array\ of\ integers\ for\ spawn\ interval)\ to\ determine\ how\ much\ time\ until\ next\ spawn</li>\r\n\ \ \ \ \ \ <li>Queue\ of\ integers\ for\ the\ current\ wave\ of\ enemies\ (integers\ for\ enemy\ type)</li>\r\n\ \ \ \ \ \ <li>Queue\ of\ integers\ for\ the\ intervals\ between\ the\ spawns\ of\ the\ current\ wave\ of\ enemies\ (milliseconds)</li>\r\n\ \ \ \ \ \ <li>ArrayList\ to\ hold\ the\ tiles\ (where\ users\ can\ place\ their\ towers)</li>\r\n\ \ \ \ \ \ <li>Queue\ of\ integers\ for\ the\ money\ given\ after\ the\ completion\ of\ each\ wave</li>\r\n\ \ \ \ \ \ <li>Enemies\ have\ an\ ArrayList\ of\ coordinates\ they\ move\ towards</li>\r\n\ \ \ \ \ \ <li>To\ determine\ which\ tower\ to\ shoot\ at,\ Dragon\ and\ Tank\ enemies\ get\ an\ ArrayList\ of\ all\ towers\ in\ the\ world,\ and\ use\ an\ algorithm\ to\ figure\ out\ which\ one\ is\ closest</li>\r\n\ \ \ \ \ \ <li>Projectiles\ have\ an\ ArrayList\ of\ enemies\ if\ splash\ damage\ needs\ to\ be\ done</li>\r\n\ \ \ \ \ \ <li>Towers\ calculate\ an\ ArrayList\ of\ enemies\ and\ determine\ which\ is\ the\ closest\ to\ fire\ at</li>\r\n\ </ul>\r\n\ <br>\r\n\ \r\n\ <h2>Graphics\ and\ Sound</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Soundtracks</li>\r\n\ \ \ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>User\ has\ the\ option\ of\ choosing\ 1\ of\ 3\ different\ soundtracks,\ or\ turning\ the\ soundtrack\ off</li>\r\n\ \ \ \ \ \ \ \ \ \ </ul>\r\n\ \ \ \ \ \ <li>Sound\ effects</li>\r\n\ \ \ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Towers\ losing\ all\ their\ health\ (explosion\ SFX)</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Tanks\ losing\ all\ health\ (explosion\ SFX)</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Cannon,\ SingleShooter\ and\ Tanks\ have\ basic\ firing\ sound\ effect</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Dragon\ and\ Flamethrower\ have\ a\ fireball\ sound\ effect</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Sound\ effect\ for\ dragon\ when\ they\ are\ defeated</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Laser\ sound\ effect\ for\ LaserTower\ shooting</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Arrow\ shooting\ sound\ effect\ for\ Archer</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Projectile\ firing\ sound\ effect\ for\ SingleLauncher</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>User\ has\ the\ option\ between\ choosing\ to\ turn\ on\ or\ off\ the\ SFX</li>\r\n\ \ \ \ \ \ \ \ \ \ </ul>\r\n\ \ \ \ \ \ <li>Graphics</li>\r\n\ \ \ \ \ \ \ \ \ \ <ul>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Each\ map\ was\ created\ by\ ourselves\ using\ tile\ art\ that\ was\ pieced\ together\ (16\ tiles\ by\ 10\ tiles)</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Flamethrower\ was\ created\ by\ ourselves,\ other\ towers\ and\ projectiles\ were\ taken\ from\ online\ (check\ credits)</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Graphics\ for\ buttons\ that\ enlarge\ and\ shrink\ were\ taken\ from\ Bloons\ Tower\ Defense\ 5,\ then\ edited\ for\ our\ purposes</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Information\ graphic\ was\ created\ by\ ourselves</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Titles\ were\ created\ by\ ourselves</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Menu\ where\ users\ select\ towers\ was\ created\ by\ ourselves</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>End\ screen\ for\ success\ and\ failure\ was\ created\ by\ ourselves</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Borders\ for\ the\ levels\ in\ the\ main\ menu\ were\ created\ by\ ourselves</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Explosion\ animation\ that\ plays\ when\ towers\ or\ tanks\ lose\ all\ their\ health</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Wolf\ animation\ when\ they\ run</li>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ <li>Dragon\ animation\ for\ flying</li>\r\n\ \ \ \ \ \ \ \ \ \ </ul>\r\n\ </ul>\r\n\ <br>\r\n\ \r\n\ <h2>Greenfoot\ Gallery</h2>\r\n\ <p><strong>Uploaded\!</strong></p>\r\n\ \r\n\ <h2>Credits</h2>\r\n\ <ul>\r\n\ \ \ \ \ \ <li>Coordinate\ Class\ from\ Mr.\ Cohen</li>\r\n\ \ \ \ \ \ <li>StatBar\ Class\ from\ Mr.\ Cohen</li>\r\n\ \ \ \ \ \ <li>UserInfo\ utilization\ and\ Scoreboard\ inspiration\ from\ Mr.\ Cohen</li>\r\n\ \ \ \ \ \ <li>Scoreboard\ Class\ from\ Neil\ Brown</li>\r\n\ \ \ \ \ \ <li>SimpleTimer\ Class\ from\ Neil\ Brown</li>\r\n\ \ \ \ \ \ <li>Button\ images\ from\ Bloons\ Tower\ Defense\ 5</li>\r\n\ \ \ \ \ \ <li>Tile\ art\ used\ for\ maps\ from\ Kenney\ 2D\ Assets</li>\r\n\ \ \ \ \ \ <li>Towers\ and\ projectiles\ from\ Kenney\ 2D\ Assets\ and\ Argidev</li>\r\n\ \ \ \ \ \ <li>Soundtrack\ 1\:\ Ashes\ on\ the\ Fire\ by\ Kohta\ Yamamoto</li>\r\n\ \ \ \ \ \ <li>Soundtrack\ 2\:\ Attack\ on\ Titan\ by\ Hiroyuki\ Sawano</li>\r\n\ \ \ \ \ \ <li>Soundtrack\ 3\:\ AppleSeed\ -\ Instrumental\ by\ Hiroyuki\ Sawano</li>\r\n\ \ \ \ \ \ <li>Explosion\ SFX\ by\ ActionVFX</li>\r\n\ \ \ \ \ \ <li>Dragon\ defeat\ SFX\ by\ Supercell</li>\r\n\ \ \ \ \ \ <li>Arrow\ firing\ by\ Sound\ Library</li>\r\n\ </ul>\r\n\ \r\n\ @author\ Andrew\ Qiao\r\n\ @version\ June\ 2021\r\n
comment1.params=
comment1.target=Start()
comment1.text=\r\n\ Starting\ constructor\ for\ the\ Start\ World,\ only\ called\ at\ the\ beginning,\ calls\ other\ constructor.\r\n
comment2.params=songIndex\ isSFX\ fromMainMenu
comment2.target=Start(int,\ int,\ boolean)
comment2.text=\r\n\ Constructor\ for\ the\ Start\ World,\ initializes\ all\ objects\ and\ adds\ them\ to\ the\ world.\r\n\ \r\n\ @param\ songIndex\ \ \ \ \ \ \ \ \ \ \ \ \ What\ soundtrack\ is\ currently\ playing\ if\ any\ (0\ -\ first\ soundtrack,\ 1\ -\ second\ soundtrack,\ 2\ -\ third\ soundtrack,\ 3\ -\ none)\r\n\ @param\ isSFX\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ sound\ effects\ are\ being\ played\ (0\ -\ yes,\ 1\ -\ no)\r\n\ @param\ fromMainMenu\ \ \ \ \ \ \ \ Boolean\ for\ if\ the\ user\ is\ coming\ from\ the\ MainMenu\ screen\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Called\ every\ act,\ changes\ the\ transparency\ of\ the\ button\ if\ necessary,\ checks\ if\ the\ user\ interacts\ with\ any\ buttons.\r\n
comment4.params=
comment4.target=void\ checkClick()
comment4.text=\r\n\ Checks\ if\ the\ user\ clicks\ on\ any\ buttons,\ and\ acts\ accordingly.\r\n
comment5.params=
comment5.target=void\ checkMouse()
comment5.text=\r\n\ Called\ every\ act,\ checks\ if\ the\ user\ hovers\ over\ any\ buttons,\ and\ if\ so,\ enlarges\ them.\r\n
comment6.params=
comment6.target=void\ nextSong()
comment6.text=\r\n\ Called\ to\ change\ to\ the\ next\ song\ and\ store\ the\ value\ for\ the\ user.\r\n
comment7.params=
comment7.target=void\ started()
comment7.text=\r\n\ Method\ that\ is\ called\ when\ the\ program\ starts,\ plays\ the\ song.\ This\ was\ used\ so\ that\ the\ music\ wouldn't\ start\ before\ the\ user\ clicked\ run.\r\n
numComments=8
